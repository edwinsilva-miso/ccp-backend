apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.9-management
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: username
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: password
        - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
          value: "-rabbitmq_management load_definitions \"/etc/rabbitmq/definitions.json\""
#        volumeMounts:
#        - name: data
#          mountPath: /var/lib/rabbitmq
#        - name: config
#          mountPath: /etc/rabbitmq/rabbitmq.conf
#          subPath: rabbitmq.conf
#        - name: config
#          mountPath: /etc/rabbitmq/enabled_plugins
#          subPath: enabled_plugins
        volumeMounts:
          - name: rabbitmq-predefined-queues
            mountPath: /etc/rabbitmq/definitions.json
            subPath: definitions.json
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          tcpSocket:
            port: 5672
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 5672
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: rabbitmq-pvc
      - name: config
        configMap:
          name: rabbitmq-config
