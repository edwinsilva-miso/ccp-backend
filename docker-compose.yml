# Put the services in the same network
version: '3.8'

services:
  # BFF
  web-bff:
    build: bff/web-bff
    container_name: web-bff
    ports:
      - "5000:5000"
    environment:
      USERS_API_URL: http://users-api:5000
    networks:
      - web_bff_net
      - app_net

  mobile-bff:
    build: bff/mobile-bff
    container_name: mobile-bff
    ports:
      - "5001:5000"
    environment:
      USERS_API_URL: http://users-api:5000
    networks:
      - mobile_bff_net
      - app_net

  # Users API
  users-api:
    build: api/usuarios-api/
    container_name: users-api
    ports:
      - "5100:5000"
    environment:
      DB_HOST: users_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: users
    depends_on:
      users_db:
        condition: service_healthy
    networks:
      - users_api_net
      - app_net
  users_db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    volumes:
      - users_db_volume:/var/lib/postgresql/data
    networks:
      - users_api_net

  # [DELETE] Put here below the services you want to add with the database (if applies)

  # Fabricantes API:
#  manufacturers-api:
#    build: api/fabricantes-api/
#    container_name: manufacturers-api
#    ports:
#      - "5102:5000"
#    environment:
#      DB_HOST: manufacturers_db
#      DB_PORT: 5433
#      DB_USER: postgres
#      DB_PASSWORD: postgres
#      DB_NAME: manufacturers
#    depends_on:
#      manufacturers_db:
#        condition: service_healthy
#    networks:
#      - manufacturers_api_net
#      - app_net

  manufacturers_db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: manufacturers
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    volumes:
      - manufacturers_db_volume:/var/lib/postgresql/data
    networks:
      - manufacturers_api_net

  # Additional Infrastructure
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management interface port
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  users_db_volume:
  manufacturers_db_volume:
  rabbitmq_data:

networks:
  app_net:
    driver: bridge
  web_bff_net:
    driver: bridge
  mobile_bff_net:
    driver: bridge
  users_api_net:
    driver: bridge
  manufacturers_api_net:
    driver: bridge